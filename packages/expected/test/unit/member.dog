use (
  {assert} = pkg:chai
  expected = ~
)

export suite(__filename, proc()
  test("when non-nested member, value wrapper with original value must be returned", proc()
    const (
      value = {x = 11, y = 22}
      w = expected(value).member("x")
    )

    assert.strictEqual(w.originalValue, value)
    assert.equal(w.value, 11)
    assert.strictEqual(w.toBeEqualTo(11), w)
  end)

  suite("when nested member", proc()
    test("when nested member, value wrapper with original value must be returned", proc()
      const (
        value = {
          a =
            x = 11
            y = 22
        }

        w = expected(value).member("a", "x")
      )

      assert.strictEqual(w.originalValue, value)
      assert.equal(w.value, 11)
      assert.strictEqual(w.toBeEqualTo(11), w)
    end)

    test("when nested member and member() twice, value wrapper with original value must be returned", proc()
      const (
        value = {
          a =
            x = 11
            y = 22
          b = 12
        }

        w = expected(value).member("a", "x").member("b")
      )

      assert.strictEqual(w.originalValue, value)
      assert.equal(w.value, 12)
      assert.strictEqual(w.toBeEqualTo(12), w)
    end)
  end)
end)
